{"version":3,"sources":["components/Statictics/Statistics.module.css","components/Notification/Notification.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statictics/Statistics.js","App.js","reportWebVitals.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/section.module.css"],"names":["module","exports","Section","title","children","className","s","section","FeedbackOptions","options","onLeaveFeedback","newArr","Object","keys","list","map","option","item","button","onClick","shortid","generate","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","items","goodStats","badStats","App","state","props","initialGood","initialNeutral","initialBad","e","name","currentTarget","textContent","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","defaultProps","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.035a587d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3AAWC\",\"items\":\"Statistics_items__WcB3U\",\"goodStats\":\"Statistics_goodStats__Q6wrv\",\"badStats\":\"Statistics_badStats__1xwZ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Notification_title__7JzVK\"};","//import React from 'react';\nimport PropTypes from \"prop-types\";\nimport s from \"./section.module.css\";\n\nexport default function Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      {title && <h2 className={s.title}> {title} </h2>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import React from \"react\";\r\nimport shortid from \"shortid\";\r\nimport s from \"./FeedbackOptions.module.css\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n\r\n  const newArr = Object.keys({...options});\r\n \r\n  return (\r\n    <ul className={s.list}>\r\n\r\n      {newArr.map(option => (\r\n        <li className={s.item} key={shortid.generate()} >\r\n          <button className={s.button} onClick={onLeaveFeedback}>\r\n            {option}\r\n          </button>\r\n        </li>\r\n      ))\r\n        }   \r\n    </ul>\r\n  )\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import s from \"./Notification.module.css\";\n\nconst Notification = ({ message }) => <h2 className={s.title}>{message}</h2>;\n\nexport default Notification;\n","import React, { Fragment } from \"react\";\nimport s from \"./Statistics.module.css\";\nimport Notification from \"../Notification/Notification\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <Fragment>\n    {total >= 1 ? (\n      <ul className={s.list}>\n        <li className={s.items}>\n          Good:\n          <span className={s.goodStats}>{good}</span>\n        </li>\n        <li className={s.items}>\n          Neutral:\n          <span className={s.goodStats}>{neutral}</span>\n        </li>\n        <li className={s.items}>\n          Bad:\n          <span className={s.goodStats}>{bad}</span>\n        </li>\n        <li className={s.items}>\n          Total:\n          <span className={s.goodStats}>{total}</span>\n        </li>\n        <li className={s.items}>\n          Positive feedback:{\" \"}\n          <span className={positivePercentage > 50 ? s.goodStats : s.badStats}>\n            {\" \"}\n            {positivePercentage} %\n          </span>\n        </li>\n      </ul>\n    ) : (\n      <Notification message=\"No feedback given\"></Notification>\n    )}\n  </Fragment>\n);\n\nexport default Statistics;\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./App.css\";\nimport Section from \"./components/Section/Section\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./components/Statictics/Statistics\";\n\nclass App extends Component {\n  static defaultProps = {\n    initialGood: 0,\n    initialBad: 0,\n    initialNeutral: 0,\n  };\n\n  static propTypes = {\n    initialGood: PropTypes.number,\n    initialBad: PropTypes.number,\n    initialNeutral: PropTypes.number,\n  };\n\n  state = {\n    good: this.props.initialGood,\n    neutral: this.props.initialNeutral,\n    bad: this.props.initialBad,\n  };\n\n  onLeaveFeedback = (e) => {\n\n    const name = e.currentTarget.textContent;\n\n    this.setState((prevState) => {\n      return {\n        [name]: prevState[name] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={this.state} onLeaveFeedback={this.onLeaveFeedback} />\n        </Section>\n\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          />\n        </Section>\n      </>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__3Nl2-\",\"item\":\"FeedbackOptions_item__2N6nk\",\"button\":\"FeedbackOptions_button__2GUoR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"section_section__3NLiS\",\"title\":\"section_title__UaCav\"};"],"sourceRoot":""}