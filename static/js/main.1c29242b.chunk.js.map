{"version":3,"sources":["components/Statictics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/section.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statictics/Statistics.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Section","title","children","className","s","section","FeedbackOptions","options","clickGood","clickNeutral","clickBad","list","item","button","onClick","Statistics","good","neutral","bad","total","positivePercentage","items","goodStats","badStats","App","state","props","initialGood","initialNeutral","initialBad","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","onLeaveFeedback","Component","defaultProps","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c29242b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3AAWC\",\"title\":\"Statistics_title__3pw5h\",\"items\":\"Statistics_items__WcB3U\",\"goodStats\":\"Statistics_goodStats__Q6wrv\",\"badStats\":\"Statistics_badStats__1xwZ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__3Nl2-\",\"item\":\"FeedbackOptions_item__2N6nk\",\"button\":\"FeedbackOptions_button__2GUoR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"section_section__3NLiS\",\"title\":\"section_title__UaCav\"};","//import React from 'react';\nimport PropTypes from \"prop-types\";\nimport s from \"./section.module.css\";\n\nexport default function Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      {title && <h2 className={s.title}> {title} </h2>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import React from \"react\";\nimport s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options }) => {\n  const { clickGood, clickNeutral, clickBad } = options;\n\n  return (\n    <ul className={s.list}>\n      <li className={s.item}>\n        <button  className={s.button} onClick={clickGood}>Good</button>\n      </li>\n      <li className={s.item}>\n        <button className={s.button} onClick={clickNeutral}>Neutral</button>\n      </li>\n      <li className={s.item}>\n        <button className={s.button} onClick={clickBad}>Bad</button>\n      </li>\n    </ul>\n  );\n};\n\nexport default FeedbackOptions;\n","import s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n\n      <ul className={s.list}>\n        <h2 className={s.title}>Statistics</h2>\n        <li className={s.items}>Good:{good}</li>\n        <li className={s.items}>Neutral: {neutral} </li>\n        <li className={s.items}>Bad: {bad} </li>\n        <li className={s.items}>Total:{total}</li>\n        <li className={s.items}>Positive feedback: <span className= {positivePercentage>50 ? s.goodStats : s.badStats}> {positivePercentage} %</span></li>\n      </ul>\n);\n\nexport default Statistics;\n\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./App.css\";\nimport Section from \"./components/Section/Section\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./components/Statictics/Statistics\";\n\nclass App extends Component {\n  static defaultProps = {\n    initialGood: 0,\n    initialBad: 0,\n    initialNeutral: 0,\n  };\n\n  static propTypes = {\n    initialGood: PropTypes.number,\n    initialBad: PropTypes.number,\n    initialNeutral: PropTypes.number,\n  };\n\n  state = {\n    good: this.props.initialGood,\n    neutral: this.props.initialNeutral,\n    bad: this.props.initialBad,\n  };\n\n  clickGood = () => {\n    this.setState((prevState) => {\n      return {\n        good: prevState.good + 1,\n      };\n    });\n  };\n\n  clickNeutral = () => {\n    this.setState((prevState) => {\n      return {\n        neutral: prevState.neutral + 1,\n      };\n    });\n  };\n\n  clickBad = () => {\n    this.setState((prevState) => {\n      return {\n        bad: prevState.bad + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.round( (this.state.good / this.countTotalFeedback()) * 100 );\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions options={this} onLeaveFeedback={this.state} />\n        </Section>\n\n        {this.countTotalFeedback() >= 1 && <Section>\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          />\n        </Section>}\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}